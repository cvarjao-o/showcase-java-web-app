diff --new-file -ru ../original/bin/setenv.sh ./bin/setenv.sh
--- ../original/bin/setenv.sh	1969-12-31 16:00:00.000000000 -0800
+++ ./bin/setenv.sh	2019-11-05 20:19:37.000000000 -0800
@@ -0,0 +1,5 @@
+CLASSPATH="$CATALINA_HOME/log4j/lib/*:$CATALINA_HOME/log4j/conf"
+# Reserve 10MB from the available memory
+CATALINA_OPTS="-Xmx40M $CATALINA_OPTS"
+CATALINA_OPTS="-XshowSettings:vm  -XX:MaxRAM=$(( $(cat /sys/fs/cgroup/memory/memory.limit_in_bytes) - ( 1024 * 10) )) -XX:MaxRAMPercentage=100.0 $CATALINA_OPTS"
+CATALINA_OPTS="-javaagent:$CATALINA_HOME/bin/jolokia-jvm-1.6.2-agent.jar=port=7070,host=localhost,discoveryEnabled=false $CATALINA_OPTS"
diff --new-file -ru ../original/bin/unpack-webapps.sh ./bin/unpack-webapps.sh
--- ../original/bin/unpack-webapps.sh	1969-12-31 16:00:00.000000000 -0800
+++ ./bin/unpack-webapps.sh	2019-11-03 21:29:23.000000000 -0800
@@ -0,0 +1,9 @@
+#!/usr/bin/env bash
+set -e
+
+THIS_DIR="$(dirname $0)"
+cd "$THIS_DIR"
+cd ../
+find ./webapps/ -maxdepth 1 -name '*.war' | xargs basename -s .war | xargs -t -I {} mkdir 'webapps/{}'
+find ./webapps/ -maxdepth 1 -name '*.war' | xargs basename -s .war | xargs -t -I {} unzip -n -qq '/usr/local/tomcat/webapps/{}.war' -d 'webapps/{}'
+find ./webapps/ -maxdepth 1 -name '*.war' | xargs -t -I {} rm '{}'
diff --new-file -ru ../original/conf/filebeat.yml ./conf/filebeat.yml
--- ../original/conf/filebeat.yml	1969-12-31 16:00:00.000000000 -0800
+++ ./conf/filebeat.yml	2019-11-21 19:31:29.000000000 -0800
@@ -0,0 +1,110 @@
+logging.metrics.enabled: false
+filebeat.inputs:
+  - type: log
+    enabled: true
+    paths:
+      - /usr/local/tomcat/logs/localhost_access_log.*.txt
+    fields:
+        tomcat: true
+        access_log: true
+    processors:
+      - script:
+          lang: javascript
+          id: access_log_parser
+          source: >
+            var regex = /^([^\s]+)\s\"([^\"]+)\"\s([^\s]+)\s([^\s]+)\s\"([^\"]+)\"\s\"(\w+)\s([^\s]+)\s([^\"]+)\"\s(\w+)\s(\w+)\s\"([^;]+)(;[^\"]+)?\"$/gm;
+            function process(event) {
+                var m;
+                while ((m = regex.exec(event.Get("message"))) !== null) {
+                  if (m.index === regex.lastIndex) {
+                      regex.lastIndex++;
+                  }
+                  var requestDateTime = Date.parse(m[5]);
+                  event.Put('proxy.ip', m[1]);
+                  event.Put('client.ip', m[2]);
+                  event.Put('http.request.timestamp', m[5]);
+                  event.Put('http.request.method', m[6]);
+                  event.Put('http.request.path', [].concat(m[7].match(/^[^?]+/gm) || [''], [''])[0]);
+                  event.Put('http.request.queryString', [].concat(m[7].match(/\?.+$/gm) || [''], [''])[0]);
+                  event.Put('http.request.uri', m[7]);
+                  event.Put('http.version', m[8]);
+                  event.Put('http.response.status_code', m[9]);
+                  event.Put('http.response.bytes', m[10]);
+                  event.Put('http.response.contentType', m[11]);
+                  //event.Put('request.timestamp.day_of_week', requestDateTime.getDay());
+                  //event.Put('request.timestamp.hour_of_day', requestDateTime.getHours())
+                }
+            }
+#      - geoip:
+#          field: http.request.client.ip
+#          target_field: http.request.client.geo
+#          ignore_missing: true
+#      - geoip:
+#          field: http.request.source.ip
+#          target_field: http.request.source.geo
+#          ignore_missing: true
+#      - fingerprint:
+#          fields: ["http.request.client.ip"]
+#          target_field: ["http.request.client.fingerprint"]
+      - timestamp:
+          field: request.timestamp
+          layouts:
+            - '2006-01-02T15:04:05.999Z0700'
+          test:
+            - '2019-11-06T01:13:21.952+0000'
+      - drop_fields:
+          fields: [request.timestamp]
+      - add_locale: ~
+      - add_fields:
+          target: ''
+          fields:
+            level: 'access'
+  - type: log
+    enabled: true
+    encoding: utf-8
+    json.keys_under_root: true
+    json.message_key: message
+    json.add_error_key: true
+    paths:
+      - /usr/local/tomcat/logs/webapp/webapp.*.json
+    fields:
+        webapp: true
+    processors:
+      - add_locale: ~
+
+  - type: log
+    enabled: true
+    encoding: utf-8
+    json.keys_under_root: true
+    json.message_key: message
+    json.add_error_key: true
+    paths:
+      - /usr/local/tomcat/logs/bam/bam.*.json
+    fields:
+        webapp: true
+    processors:
+      - add_locale: ~
+      - add_fields:
+          target: ''
+          fields:
+            bam: 'true'
+processors:
+- add_fields:
+    target: 'app'
+    fields:
+      name: 'myapp'
+      env: 'dev'
+
+output.console:
+  pretty: true
+
+setup.ilm.enabled: true
+setup.ilm.rollover_alias: "logs-dev-myapp"
+setup.ilm.pattern: "{now/d}-000001"
+setup.ilm.policy_name: "filebeat-%{[agent.version]}"
+
+setup.template.name: "filebeat-%{[agent.version]}"
+setup.template.pattern: "logs-dev-myapp-*"
+
+output.elasticsearch:
+  index: "logs-dev-myapp-%{[level]}-%{[agent.version]}-%{+yyyy.MM.dd}"
diff --new-file -ru ../original/conf/metricbeat.yml ./conf/metricbeat.yml
--- ../original/conf/metricbeat.yml	1969-12-31 16:00:00.000000000 -0800
+++ ./conf/metricbeat.yml	2019-11-13 16:22:29.000000000 -0800
@@ -0,0 +1,124 @@
+logging.metrics.enabled: false
+metricbeat.modules:
+  - module: jolokia
+    metricsets: ["jmx"]
+    enabled: true
+    period: 10s
+    hosts: ["localhost:7070"]
+    namespace: "jmx"
+    path: "/jolokia"
+    http_method: 'GET'
+    jmx.mappings:
+      - mbean: 'java.lang:type=OperatingSystem'
+        attributes:
+         - attr: ProcessCpuLoad
+           field: process.cpu.load
+         - attr: ProcessCpuTime
+           field: process.cpu.time
+         - attr: SystemCpuLoad
+           field: system.cpu.load
+         - attr: SystemLoadAverage
+           field: system.cpu.load.avg
+      - mbean: 'java.lang:type=Memory'
+        attributes:
+         - attr: HeapMemoryUsage
+           field: memory.heap
+         - attr: NonHeapMemoryUsage
+           field: memory.other
+      - mbean: 'java.lang:name=*,type=MemoryPool'
+        attributes:
+         - attr: Name
+           field: memory.pool.name
+         - attr: Type
+           field: memory.pool.type
+         - attr: Usage
+           field: memory.pool.usage
+         - attr: PeakUsage
+           field: memory.pool.peakUsage
+      - mbean: 'Catalina:name=*,type=ThreadPool'
+        attributes:
+          - attr: currentThreadsBusy
+            field: thread.pool.busy
+            event: jmx
+          - attr: maxThreads
+            field: thread.pool.max
+            event: jmx
+          - attr: currentThreadCount
+            field: thread.pool.current
+            event: jmx
+          - attr: keepAliveCount
+            field: thread.pool.keep_alive.total
+            event: jmx
+          - attr: keepAliveTimeout
+            field: thread.pool.keep_alive.timeout.ms
+            event: jmx
+
+      - mbean: 'java.lang:type=Threading'
+        attributes:
+          - attr: TotalStartedThreadCount
+            field: started.total
+          - attr: CurrentThreadUserTime
+            field: user.time.ms
+          - attr: CurrentThreadCpuTime
+            field: cpu.time.ms
+          - attr: ThreadCount
+            field: total
+          - attr: PeakThreadCount
+            field: peak
+      - mbean: 'java.lang:type=Runtime'
+        attributes:
+         - attr: Uptime
+           field: uptime
+      - mbean: 'Catalina:name=*,type=GlobalRequestProcessor'
+        attributes:
+         - attr: requestCount
+           field: tomcat.requests.total
+         - attr: errorCount
+           field: tomcat.requests.errors.total
+         - attr: bytesReceived
+           field: tomcat.requests.bytes.received
+         - attr: bytesSent
+           field: tomcat.requests.bytes.sent
+      - mbean: 'Catalina:type=Manager,context=*,host=localhost'
+        attributes:
+         - attr: maxActive
+           field: tomcat.session.active.max
+         - attr: activeSessions
+           field: tomcat.session.active.current
+         - attr: expiredSessions
+           field: tomcat.session.expired
+         - attr: sessionCounter
+           field: tomcat.session.total
+         - attr: rejectedSessions
+           field: tomcat.session.rejected
+         - attr: duplicates
+           field: tomcat.session.duplicates
+#  - module: tomcat
+#    metricsets: ['threading', 'cache', 'memory', 'requests']
+#    period: 10s
+#    hosts: ['localhost:7070']
+#    path: "/jolokia/?ignoreErrors=true&canonicalNaming=false"
+  
+processors:
+  - add_fields:
+      target: 'app'
+      fields:
+        name: 'myapp'
+        env: 'dev'
+
+#processors:
+#  - add_host_metadata: ~
+#  - add_cloud_metadata: ~
+
+output.console:
+  pretty: true
+
+setup.ilm.enabled: auto
+setup.ilm.rollover_alias: "metrics-dev-myapp"
+setup.ilm.pattern: "{now/d}-000001" 
+setup.ilm.policy_name: "metricbeat-%{[agent.version]}"
+
+#setup.template.enabled: false
+setup.template.name: "metricbeat-%{[agent.version]}"
+setup.template.pattern: "metrics-dev-myapp-*"
+#output.elasticsearch.index: "metrics-dev-myapp-%{[agent.version]}-%{+yyyy.MM.dd}"
diff --new-file -ru ../original/conf/server.xml ./conf/server.xml
--- ../original/conf/server.xml	2019-11-03 18:56:02.000000000 -0800
+++ ./conf/server.xml	2019-11-21 20:23:11.000000000 -0800
@@ -113,7 +113,7 @@
     -->
 
     <!-- Define an AJP 1.3 Connector on port 8009 -->
-    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
+    <!--<Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />-->
 
 
     <!-- An Engine represents the entry point (within Catalina) that processes
@@ -130,9 +130,15 @@
       <!--For clustering, please take a look at documentation at:
           /docs/cluster-howto.html  (simple how to)
           /docs/config/cluster.html (reference documentation) -->
-      <!--
-      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
-      -->
+
+      <!-- Reference: https://tomcat.apache.org/tomcat-9.0-doc/cluster-howto.html -->
+      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster" channelSendOptions="6">
+          <Channel className="org.apache.catalina.tribes.group.GroupChannel">
+              <Membership className="org.apache.catalina.tribes.membership.cloud.CloudMembershipService"/>
+              <Interceptor className="org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor"/>
+          </Channel>
+          <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
+      </Cluster>
 
       <!-- Use the LockOutRealm to prevent attempts to guess user passwords
            via a brute-force attack -->
@@ -146,7 +152,7 @@
       </Realm>
 
       <Host name="localhost"  appBase="webapps"
-            unpackWARs="true" autoDeploy="true">
+            unpackWARs="true" autoDeploy="false" deployOnStartup="true">
 
         <!-- SingleSignOn valve, share authentication between web applications
              Documentation at: /docs/config/valve.html -->
@@ -154,12 +160,19 @@
         <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
         -->
 
+        <Valve className="org.apache.catalina.valves.RemoteIpValve"
+               internalProxies=".*"
+               remoteIpHeader="x-forwarded-for"
+               proxiesHeader="x-forwarded-by"
+               protocolHeader="x-forwarded-proto" />
+
         <!-- Access log processes all example.
              Documentation at: /docs/config/valve.html
              Note: The pattern used is equivalent to using pattern="common" -->
         <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
+               buffered="false" encoding="UTF-8"
                prefix="localhost_access_log" suffix=".txt"
-               pattern="%h %l %u %t &quot;%r&quot; %s %b" />
+               pattern="%a &quot;%{x-forwarded-for}i&quot; %l %u &quot;%{yyyy-MM-dd'T'HH:mm:ss.SSSZ}t&quot; &quot;%r&quot; %s %b &quot;%{Content-Type}o&quot;" />
 
       </Host>
     </Engine>
diff --new-file -ru ../original/conf/web.xml ./conf/web.xml
--- ../original/conf/web.xml	2019-11-03 18:56:04.000000000 -0800
+++ ./conf/web.xml	2019-11-03 18:56:15.000000000 -0800
@@ -631,7 +631,7 @@
   <!-- created sessions by modifying the value below.                       -->
 
     <session-config>
-        <session-timeout>30</session-timeout>
+        <session-timeout>5</session-timeout>
     </session-config>
 
 
diff --new-file -ru ../original/log4j/conf/log4j2-tomcat.xml ./log4j/conf/log4j2-tomcat.xml
--- ../original/log4j/conf/log4j2-tomcat.xml	1969-12-31 16:00:00.000000000 -0800
+++ ./log4j/conf/log4j2-tomcat.xml	2019-11-03 21:28:48.000000000 -0800
@@ -0,0 +1,26 @@
+<Configuration status="error"> 
+    <Properties>
+        <Property name="layout.catalina"  value="%d [catalina ] [%-5p] - %m%n"/>
+        <Property name="layout.localhost" value="%d [localhost] [%-5p] - %m%n"/>
+    </Properties> 
+    <Appenders> 
+		<Console name="CATALINA">
+	      <PatternLayout>
+	        <Pattern>${layout.catalina}</Pattern>
+	      </PatternLayout>
+		</Console>
+		<Console name="LOCALHOST">
+	      <PatternLayout>
+	        <Pattern>${layout.localhost}</Pattern>
+	      </PatternLayout>
+		</Console>
+    </Appenders> 
+    <Loggers> 
+        <Root level="INFO"> 
+            <AppenderRef ref="CATALINA"/> 
+        </Root>
+        <Logger name="org.apache.catalina.core.ContainerBase.[Catalina].[localhost]" level="DEBUG" additivity="false"> 
+            <AppenderRef ref="LOCALHOST"/> 
+        </Logger> 
+    </Loggers> 
+</Configuration>
